rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Base rules
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Default: allow read access for authenticated users, but restrict write
    match /{document=**} {
      allow read: if isAuthenticated();
      allow write: if false;
    }
    
    // User profiles: users can read/write their own profiles, admins can read all
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow write: if isOwner(userId) || isAdmin();
    }
    
    // Dashboard data: all authenticated users can read, only admins can write
    match /dashboard/{documentId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // Analytics data: all authenticated users can read, only admins can write
    match /analytics/{documentId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // Email data: all authenticated users can read and write
    match /emails/{documentId} {
      allow read, write: if isAuthenticated();
      
      // Allow access to any subcollections under emails
      match /{subCollection}/{document} {
        allow read, write: if isAuthenticated();
      }
    }
    
    // Settings data: users can read/write their own settings, admins can read all
    match /settings/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow write: if isOwner(userId) || isAdmin();
    }
  }
}